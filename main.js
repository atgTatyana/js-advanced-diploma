!function(){"use strict";class t{constructor(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"generic";if("Character"===new.target.name)throw new Error("Нельзя создавать объект класса Character!");if(t<1||t>4)throw new Error("Уровень персонажа должен быть от 1 до 4!");this.level=t,this.health=50,this.type=e}propertyUp(t){return Math.round(Math.max(t,t*((80+this.health)/100)))}up(){if(this.health<=0)throw new Error("Нельзя повысить уровень умершего!");this.attack=this.propertyUp(this.attack),this.defence=this.propertyUp(this.defence),this.health=this.health+80>100?100:this.health+80}levelUp(){this.level+=1}}class e{constructor(e,s){if(!(e instanceof t))throw new Error("character must be instance of Character or its children");if("number"!=typeof s)throw new Error("position must be a number");this.character=e,this.position=s}static getPlayerTeamPositions(t){let e=0;const s=[0,1];for(let i=0;i<t-1;i+=1)e+=t,s.push(e),s.push(e+1);return s}static getPcTeamPositions(t){let e=t-2;const s=[e,e+1];for(let i=0;i<t-1;i+=1)e+=t,s.push(e),s.push(e+1);return s}}class s{constructor(){this.boardSize=8,this.playerTeamPositions=e.getPlayerTeamPositions(this.boardSize),this.pcTeamPositions=e.getPcTeamPositions(this.boardSize),this.container=null,this.boardEl=null,this.cells=[],this.cellClickListeners=[],this.cellEnterListeners=[],this.cellLeaveListeners=[],this.newGameListeners=[],this.saveGameListeners=[],this.loadGameListeners=[]}bindToDOM(t){if(!(t instanceof HTMLElement))throw new Error("container is not HTMLElement");this.container=t}drawUi(t){this.checkBinding(),this.container.innerHTML='\n      <div class="controls">\n        <button data-id="action-restart" class="btn">New Game</button>\n        <button data-id="action-save" class="btn">Save Game</button>\n        <button data-id="action-load" class="btn">Load Game</button>\n      </div>\n      <div class="board-container">\n        <div data-id="board" class="board"></div>\n      </div>\n    ',this.newGameEl=this.container.querySelector("[data-id=action-restart]"),this.saveGameEl=this.container.querySelector("[data-id=action-save]"),this.loadGameEl=this.container.querySelector("[data-id=action-load]"),this.newGameEl.addEventListener("click",(t=>this.onNewGameClick(t))),this.saveGameEl.addEventListener("click",(t=>this.onSaveGameClick(t))),this.loadGameEl.addEventListener("click",(t=>this.onLoadGameClick(t))),this.boardEl=this.container.querySelector("[data-id=board]"),this.boardEl.classList.add(t);for(let t=0;t<this.boardSize**2;t+=1){const i=document.createElement("div");i.classList.add("cell","map-tile","map-tile-"+(e=t,s=this.boardSize,0===e?"top-left":e===s-1?"top-right":e<s-1?"top":e===s*(s-1)?"bottom-left":e===s**2-1?"bottom-right":e>s*(s-1)?"bottom":e%s==0?"left":(e+1)%s==0?"right":"center")),i.addEventListener("mouseenter",(t=>this.onCellEnter(t))),i.addEventListener("mouseleave",(t=>this.onCellLeave(t))),i.addEventListener("click",(t=>this.onCellClick(t))),this.boardEl.appendChild(i)}var e,s;this.cells=Array.from(this.boardEl.children)}redrawPositions(t){for(const t of this.cells)t.innerHTML="";for(const s of t){const t=this.boardEl.children[s.position],i=document.createElement("div");i.classList.add("character",s.character.type);const a=document.createElement("div");a.classList.add("health-level");const o=document.createElement("div");o.classList.add("health-level-indicator","health-level-indicator-"+((e=s.character.health)<15?"critical":e<50?"normal":"high")),o.style.width=`${s.character.health}%`,a.appendChild(o),i.appendChild(a),t.appendChild(i)}var e}addCellEnterListener(t){this.cellEnterListeners.push(t)}addCellLeaveListener(t){this.cellLeaveListeners.push(t)}addCellClickListener(t){this.cellClickListeners.push(t)}addNewGameListener(t){this.newGameListeners.push(t)}addSaveGameListener(t){this.saveGameListeners.push(t)}addLoadGameListener(t){this.loadGameListeners.push(t)}onCellEnter(t){t.preventDefault();const e=this.cells.indexOf(t.currentTarget);this.cellEnterListeners.forEach((t=>t.call(null,e)))}onCellLeave(t){t.preventDefault();const e=this.cells.indexOf(t.currentTarget);this.cellLeaveListeners.forEach((t=>t.call(null,e)))}onCellClick(t){const e=this.cells.indexOf(t.currentTarget);this.cellClickListeners.forEach((t=>t.call(null,e)))}onNewGameClick(t){t.preventDefault(),this.newGameListeners.forEach((t=>t.call(null)))}onSaveGameClick(t){t.preventDefault(),this.saveGameListeners.forEach((t=>t.call(null)))}onLoadGameClick(t){t.preventDefault(),this.loadGameListeners.forEach((t=>t.call(null)))}static showError(t){alert(t)}static showMessage(t){alert(t)}selectCell(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:"yellow";this.deselectCell(t),this.cells[t].classList.add("selected",`selected-${e}`)}deselectCell(t){const e=this.cells[t];e.classList.remove(...Array.from(e.classList).filter((t=>t.startsWith("selected"))))}showCellTooltip(t,e){this.cells[e].title=t}hideCellTooltip(t){this.cells[t].title=""}showDamage(t,e){return new Promise((s=>{const i=this.cells[t],a=document.createElement("span");a.textContent=e,a.classList.add("damage"),i.appendChild(a),a.addEventListener("animationend",(()=>{i.removeChild(a),s()}))}))}setCursor(t){this.boardEl.style.cursor=t}checkBinding(){if(null===this.container)throw new Error("GamePlay not bind to DOM")}}var i="prairie",a="desert",o="arctic",r="mountain";class h extends t{constructor(t){super(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"bowman"),this.attack=25,this.defence=25}}class n extends t{constructor(t){super(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"daemon"),this.attack=30,this.defence=20}}class l extends t{constructor(t){super(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"magician"),this.attack=30,this.defence=40}}class c extends t{constructor(t){super(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"swordsman"),this.attack=40,this.defence=10}}class d extends t{constructor(t){super(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"undead"),this.attack=40,this.defence=10}}class m extends t{constructor(t){super(t,arguments.length>1&&void 0!==arguments[1]?arguments[1]:"vampire"),this.attack=25,this.defence=25}}class p{constructor(t){this.isPlayer=!0,this.level=t}changeIsPlayer(){this.isPlayer=!this.isPlayer}static configure(t,e,s,i,a,o){return{playerPositionedCharacters:t,pcPositionedCharacters:e,currentScore:s,playerPositions:i,pcPositions:a,level:o}}static from(t){let e;switch(t.type){case"bowman":e=new h(t.level);break;case"daemon":e=new n(t.level);break;case"magician":e=new l(t.level);break;case"swordsman":e=new c(t.level);break;case"undead":e=new d(t.level);break;case"vampire":e=new m(t.level)}return e.health=t.health,e.attack=t.attack,e.defence=t.defence,e}}class P{constructor(t){this.characters=t}static forTeam(t){const e=[],s=[];let i;for(let a=0;a<t.length;a+=1)i=p.from(t[a].character),e.push(i),s.push(t[a].position);return[e,s]}}function g(t,e,s){const i=function*(t,e){for(;;){const s=t[Math.floor(Math.random()*t.length)],i=Math.floor(Math.random()*e)+1;switch(s){case"Bowman":yield new h(i);break;case"Daemon":yield new n(i);break;case"Magician":yield new l(i);break;case"Swordsman":yield new c(i);break;case"Undead":yield new d(i);break;case"Vampire":yield new m(i)}}}(t,e),a=[];for(let t=0;t<s;t+=1){a[t]=i.next().value;for(let e=1;e<a[t].level;e+=1)a[t].up()}return new P(a)}var u="auto",v="pointer",C="crosshair",y="not-allowed";const f=new s;f.bindToDOM(document.querySelector("#game-container"));const w=new class{constructor(t){this.storage=t}remove(){this.storage.removeItem("state")}save(t){this.storage.setItem("state",JSON.stringify(t))}saveMaxScore(t){this.storage.setItem("maxScore",JSON.stringify(t))}load(){try{return JSON.parse(this.storage.getItem("state"))}catch(t){throw new Error("Invalid state")}}loadMaxScore(){try{return JSON.parse(this.storage.getItem("maxScore"))}catch(t){throw new Error("Invalid maxScore")}}}(localStorage),E=new class{constructor(t,e){this.gamePlay=t,this.stateService=e,this.playerTypes=["Bowman","Swordsman","Magician"],this.pcTypes=["Vampire","Undead","Daemon"]}init(){this.maxScore=this.stateService.loadMaxScore(),this.maxScore||(this.maxScore=0),this.gamePlay.drawUi("prairie"),this.addCursorPointer(),this.gamePlay.addNewGameListener(this.onNewGame.bind(this)),this.gamePlay.addSaveGameListener(this.onSaveGame.bind(this)),this.gamePlay.addLoadGameListener(this.onLoadGame.bind(this))}addCursorPointer(){this.gamePlay.newGameEl.style.cursor=v,this.gamePlay.saveGameEl.style.cursor=v,this.gamePlay.loadGameEl.style.cursor=v}addListener(){this.gamePlay.addCellEnterListener(this.onCellEnter.bind(this)),this.gamePlay.addCellLeaveListener(this.onCellLeave.bind(this)),this.gamePlay.addCellClickListener(this.onCellClick.bind(this))}onNewGame(){this.currentScore=0,this.playerPositions=[],this.gameEnd(),this.addListener(),this.newGame(1)}onSaveGame(){if(this.playerPositions){const t=p.configure(this.playerPositionedCharacters,this.pcPositionedCharacters,this.currentScore,this.playerPositions,this.pcPositions,this.gameState.level);this.stateService.save(t)}}onLoadGame(){try{if(this.state=this.stateService.load(),this.state){this.gameEnd(),this.movePositions=[],this.playerPositions=this.state.playerPositions,this.pcPositions=this.state.pcPositions,this.currentScore=this.state.currentScore;const{playerPositionedCharacters:t,pcPositionedCharacters:e}=this.state,s=P.forTeam(t),i=P.forTeam(e);this.playerPositionedCharacters=this.getTeamPositionedCharacters(new P(s[0]),s[1]),this.pcPositionedCharacters=this.getTeamPositionedCharacters(new P(i[0]),i[1]),this.positionedCharacters=[...this.playerPositionedCharacters,...this.pcPositionedCharacters],this.draw(),0!==this.pcPositions.length&&this.addListener()}}catch(t){s.showError("Ошибка загрузки state!")}null===this.state&&s.showMessage("Сохранённой игры нет!")}draw(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:this.state.level;this.getTheme(t),this.gamePlay.drawUi(this.theme),this.addCursorPointer(),this.gamePlay.redrawPositions(this.positionedCharacters),this.gameState=new p(t)}newGame(t){let e;this.activeCharacter=null,this.movePositions=[],this.attackPositions=[],e=1===t?2:2===t?3:5,this.getTeams(t,e),this.draw(t)}getTheme(t){switch(t){case 1:this.theme=i;break;case 2:this.theme=a;break;case 3:this.theme=o;break;case 4:this.theme=r}}getTeams(t,e){this.prevCharacters=[],this.playerPositions&&this.playerPositions.length>0&&(this.prevCharacters=this.playerPositionedCharacters),this.playerPositions=this.getTeamPositions(this.gamePlay.playerTeamPositions,e),this.pcPositions=this.getTeamPositions(this.gamePlay.pcTeamPositions,e);const s=g(this.pcTypes,t,e),i=g(this.playerTypes,t,e-this.prevCharacters.length);this.prevCharacters.forEach((t=>{i.characters.push(t.character)})),this.playerPositionedCharacters=this.getTeamPositionedCharacters(i,this.playerPositions),this.pcPositionedCharacters=this.getTeamPositionedCharacters(s,this.pcPositions),this.positionedCharacters=[...this.playerPositionedCharacters,...this.pcPositionedCharacters]}getTeamPositions(t,e){for(this.teamPositions=new Set;this.teamPositions.size<e;)this.teamPositions.add((s=t)[Math.floor(Math.random()*s.length)]);var s;return[...this.teamPositions]}getTeamPositionedCharacters(t,s){return this.teamPositionedCharacters=[],t.characters.forEach(((t,i)=>{this.teamPositionedCharacters.push(new e(t,s[i]))})),this.teamPositionedCharacters}onCellClick(t){if(this.activeCharacter){const e=this.playerPositionedCharacters.find((e=>e.position===t));if(e)return void(e!==this.activeCharacter&&this.getNewActiveCharacter(t,e));this.pcPositions.includes(t)&&this.attackPositions.includes(t)?(console.log("attack! ",t),this.damage(t)):this.movePositions.includes(t)&&!this.pcPositions.includes(t)?(console.log("move! ",t),this.move(t)):console.log("Недопустимый ход!")}else this.getActiveCharacter(t)}changePlayer(){let t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:null;this.deleteDisplay(),null!==t&&this.gamePlay.deselectCell(t),this.movePositions=[],this.attackPositions=[];const e=this.activeCharacter;this.activeCharacter=null,this.gameState.changeIsPlayer(),this.gameState.isPlayer||this.pcMove(e)}getActiveCharacter(t){this.activeCharacter=this.playerPositionedCharacters.find((e=>e.position===t)),this.activeCharacter?this.getDisplay(t):s.showError("Выберите другого персонажа!")}getDisplay(t){this.gamePlay.selectCell(t),this.playerPositionedCharacters.filter((e=>e.position!==t)).forEach((t=>{this.gamePlay.cells[t.position].style.cursor=v})),this.getRanges(),this.movePositions.forEach((t=>{this.gamePlay.cells[t].style.cursor=v})),this.attackPositions.forEach((t=>{this.gamePlay.cells[t].style.border="1px solid yellow"})),this.pcPositionedCharacters.forEach((t=>{this.attackPositions.includes(t.position)?this.gamePlay.cells[t.position].style.cursor=C:this.gamePlay.cells[t.position].style.cursor=y}))}deleteDisplay(){for(let t=0;t<this.gamePlay.boardSize**2;t+=1)this.gamePlay.cells[t].style.cursor=u,this.gamePlay.deselectCell(t);this.attackPositions.forEach((t=>{this.gamePlay.cells[t].style.border=""}))}getNewActiveCharacter(t,e){this.deleteDisplay(),this.activeCharacter=e,this.getDisplay(t)}getRanges(){const{type:t}=this.activeCharacter.character,{position:e}=this.activeCharacter;if(this.cellsPositions=new Set(this.getRange1Cell(e)),"bowman"===t||"vampire"===t){const t=new Set(this.centers);return t.delete(null),this.getRange2Cell(t),this.cellsPositions.delete(e),this.attackPositions=[...this.cellsPositions],this.movePositions=[...this.cellsPositions],void this.deletePosition()}"swordsman"!==t&&"undead"!==t||(this.attackPositions=[...this.cellsPositions]),"magician"!==t&&"daemon"!==t||(this.movePositions=[...this.cellsPositions]);const s=new Set(this.centers);s.delete(null);const i=new Set;this.getRange3Cell(s,i),i.delete(e),i.delete(null);const a=new Set;this.getRange3Cell(i,a),a.delete(null),this.getRange2Cell(a),this.cellsPositions.delete(e),"swordsman"!==t&&"undead"!==t||(this.movePositions=[...this.cellsPositions]),"magician"!==t&&"daemon"!==t||(this.attackPositions=[...this.cellsPositions]),this.deletePosition()}getRange1Cell(t){const{boardSize:e}=this.gamePlay,s=[];this.centers=[];let i=!1,a=!1,o=!1,r=null,h=null,n=null,l=null;return t-e>=0&&(s.push(t-e),i=!0),t%e!=0&&(s.push(t-1),i&&(r=t-e-1,s.push(r)),o=!0),t+e<e**2&&(s.push(t+e),o&&(n=t+e-1,s.push(n)),a=!0),(t+1)%e!=0&&(s.push(t+1),a&&(l=t+e+1,s.push(l)),i&&(h=t-e+1,s.push(h))),this.centers=[r,h,n,l],s}getRange2Cell(t){t.forEach((t=>{this.getRange1Cell(t).forEach((t=>this.cellsPositions.add(t)))}))}getRange3Cell(t,e){t.forEach((t=>{this.getRange1Cell(t).forEach((t=>this.cellsPositions.add(t))),this.centers.forEach((t=>{e.add(t)}))}))}onCellEnter(t){if(this.playerPositions.includes(t)||this.pcPositions.includes(t)){const e=this.getCharacterInfo(t);this.gamePlay.showCellTooltip(e,t)}else this.movePositions&&this.movePositions.includes(t)&&this.gamePlay.selectCell(t,"green");this.attackPositions&&this.attackPositions.includes(t)&&this.pcPositions.includes(t)&&this.gamePlay.selectCell(t,"red")}getCharacterInfo(t){this.characterEnter=this.positionedCharacters.find((e=>e.position===t));const e=this.characterEnter.character;return`🎖 ${e.level}  ⚔ ${e.attack}  🛡 ${e.defence}  ❤ ${e.health}`}onCellLeave(t){this.gamePlay.hideCellTooltip(t),this.activeCharacter&&this.activeCharacter.position!==t&&this.gamePlay.deselectCell(t)}pcMove(t){const e=[],s=[];this.target&&(this.newAttack=t.position);for(let t=0;t<this.pcPositionedCharacters.length;t+=1)this.activeCharacter=this.pcPositionedCharacters[t],this.getRanges(),this.target&&this.attackPositions.includes(this.newAttack)?e.push(this.pcPositionedCharacters[t]):this.playerPositions.forEach((e=>{this.attackPositions.includes(e)&&s.push({target:e,char:this.pcPositionedCharacters[t]})}));if(e.length)return e.sort(((t,e)=>e.character.attack-t.character.attack)),this.damage(t,e[0].character),void(this.target=null);if(s.length){s.sort(((t,e)=>e.char.character.attack-t.char.character.attack));const t=this.playerPositionedCharacters.find((t=>t.position===s[0].target));return this.damage(t,s[0].char.character),void(this.target=null)}const i=this.pcChoiceMoveCharacter();this.pcChoiceMovePosition(...i)}deletePosition(){[...this.playerPositions,...this.pcPositions].forEach((t=>{this.movePositions=this.movePositions.filter((e=>e!==t))})),this.gameState.isPlayer?this.playerPositions.forEach((t=>{this.attackPositions=this.attackPositions.filter((e=>e!==t))})):this.pcPositions.forEach((t=>{this.attackPositions=this.attackPositions.filter((e=>e!==t))}))}pcChoiceMoveCharacter(){const t=[];for(let e=0;e<this.playerPositions.length;e+=1){const s=this.playerPositions[e]%this.gamePlay.boardSize,i=Math.floor(this.playerPositions[e]/this.gamePlay.boardSize);t[e]=[s,i]}const e=[];for(let s=0;s<this.pcPositions.length;s+=1){const i=this.pcPositions[s]%this.gamePlay.boardSize,a=Math.floor(this.pcPositions[s]/this.gamePlay.boardSize);for(let o=0;o<t.length;o+=1){const r=i-t[o][0]<0?-(i-t[o][0]):i-t[o][0],h=a-t[o][1]<0?-(a-t[o][1]):a-t[o][1];e.push([this.pcPositions[s],this.playerPositions[o],t[o],r+h])}}return e.sort(((t,e)=>t[3]-e[3])),e[0]}pcChoiceMovePosition(t,e,s){this.activeCharacter=this.pcPositionedCharacters.find((e=>e.position===t)),this.getRanges();const i=[];let a=[];const o=[];this.movePositions.forEach((t=>{const e=t%this.gamePlay.boardSize,a=e-s[0]<0?-(e-s[0]):e-s[0];i.push([t,a])})),i.sort(((t,e)=>t[1]-e[1])),a=i.filter((t=>t[1]===i[0][1])),a.forEach((t=>{const e=Math.floor(t[0]/this.gamePlay.boardSize),i=e-s[1]<0?-(e-s[1]):e-s[1];o.push([t[0],i])})),o.sort(((t,e)=>t[1]-e[1])),this.move(o[0][0])}damage(t){let e=arguments.length>1&&void 0!==arguments[1]?arguments[1]:this.activeCharacter.character;const{attack:s}=e;this.gameState.isPlayer?this.target=this.pcPositionedCharacters.find((e=>e.position===t)):this.target=t;const i=Math.round(Math.max(s-this.target.character.defence,.1*s));this.gameState.isPlayer?this.gamePlay.showDamage(t,i):this.gamePlay.showDamage(t.position,i),this.target.character.health-=i,this.target.character.health<=0&&(this.playerPositions.includes(this.target.position)?(this.playerPositions=this.playerPositions.filter((t=>t!==this.target.position)),this.playerPositionedCharacters=this.playerPositionedCharacters.filter((t=>t.position!==this.target.position))):(this.pcPositions=this.pcPositions.filter((t=>t!==this.target.position)),this.pcPositionedCharacters=this.pcPositionedCharacters.filter((t=>t.position!==this.target.position)),this.currentScore+=10),this.positionedCharacters=this.positionedCharacters.filter((t=>t.position!==this.target.position))),setTimeout((()=>{if(this.gamePlay.redrawPositions(this.positionedCharacters),0===this.pcPositions.length){if(4===this.gameState.level)return console.log("ПОБЕДА!"),this.deleteDisplay(),void this.gameEnd();this.playerPositionedCharacters.forEach((t=>{t.character.levelUp(),t.character.up()})),this.newGame(this.gameState.level+1)}else 0===this.playerPositions.length?(console.log("Вы проиграли!"),this.gameEnd()):this.changePlayer()}),500)}move(t){const{position:e}=this.activeCharacter,s=e,i=(s,i)=>{s.splice(s.indexOf(e),1,t);const a=i.indexOf(this.activeCharacter);i[a].position=t};this.gameState.isPlayer?i(this.playerPositions,this.playerPositionedCharacters):i(this.pcPositions,this.pcPositionedCharacters),this.positionedCharacters=[...this.playerPositionedCharacters,...this.pcPositionedCharacters],this.gamePlay.redrawPositions(this.positionedCharacters),this.changePlayer(s)}gameEnd(){this.activeCharacter=null,this.gamePlay.cellEnterListeners=[],this.gamePlay.cellClickListeners=[],this.currentScore&&(this.maxScore=Math.max(this.maxScore,this.currentScore),this.stateService.saveMaxScore(this.maxScore))}}(f,w);E.init()}();